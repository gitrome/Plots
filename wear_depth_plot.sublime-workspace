{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"gw",
				"gwy_app_data_browser_set_current"
			],
			[
				"g",
				"gwy"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "# https://sourceforge.net/p/gwyddion/discussion/pygwy/thread/f634d66b/\n# https://sourceforge.net/p/gwyddion/discussion/pygwy/thread/a72be79a/\n# By David Necas  (Yeti)\n# By LABORDERIE Camille\n# Modified by Dominic\n\nimport sys\n\nsys.path.append(\"C:\\Program Files (x86)\\Gwyddion\\bin\")\n\nimport gwy\n\nsys.path.append(\"C:\\Program Files (x86)\\Gwyddion\\share\\gwyddion\\pygwy\")\n\nimport gwyutils\nimport glob, os\n\nos.system('cls')\n\nfolder = raw_input(\"Folder to correct : \")\n\npolynom = -1\nwhile polynom <= 0 or polynom > 12:\n    polynom = input(\"Polynomial order to remove : \")\n    polynom = int(polynom)\n\nsave = \"\"\nwhile save != \"y\" and save != \"n\":\n    save = raw_input(\"Save also as .asc? [y/n] :\")\n\n#func = \"\"    \n#while func == \"\":\n#    func = raw_input(\"Function to use: \")\n\nfor filename in glob.glob(folder + \"/*.asc\"):\n\n    ## Open the file\n    print \"Opening file : \" + filename + \"\\n\"\n\n    container = gwy.gwy_file_load(filename,gwy.RUN_NONINTERACTIVE)\n    gwy.gwy_app_data_browser_add(container)\n\n    dfields = gwyutils.get_data_fields_dir(container)\n    for key in dfields.keys():    # going through datafields, i.e. channels\n        datafield = dfields[key]\n        datafield_id = key.split('/')[1]\n\n        ## Remove polynomial background\n        coeffs = datafield.fit_polynom(polynom, polynom)\n        datafield.subtract_polynom(polynom, polynom, coeffs)\n        datafield.data_changed()\n\n        ## Linewise correction / Align rows\n\n#        gwy.layermask()\n#        gwy.gwy_process_func_run(\"line_correct_median\", container, gwy.RUN_IMMEDIATE)\n#        gwy.gwy_process_func_run(\"scars_remove\", container, gwy.RUN_IMMEDIATE)\n        gwy.gwy_process_func_run(\"fix_zero\", container, gwy.RUN_IMMEDIATE)\n        datafield.data_changed()\n        #gwy.gwy_process_func_run(func, container, gwy.RUN_IMMEDIATE)\n\n        ## Save the file as a .png\n        newname = os.path.splitext(filename)[0] + \"_c\"+ str(polynom) + \"_\" + \".png\"\n        gwy.gwy_app_data_browser_select_data_field(container, 0)\n        gwy.gwy_file_save(container, newname, gwy.RUN_NONINTERACTIVE)\n\n        ## Save the file as a .asc\n        if save == \"y\":\n            newname = os.path.splitext(filename)[0] + \"_c\"+ str(polynom) + \"_\" + \".asc\"\n            gwy.gwy_app_data_browser_select_data_field(container, 0)\n            gwy.gwy_file_save(container, newname, gwy.RUN_NONINTERACTIVE)\n\n        ## Get current datafield\n        data = gwy.gwy_app_data_browser_get_current(gwy.APP_DATA_FIELD)\n\n        ## Computes basic statistical quantities of a data field.\n        avg, ra, rms, skew, kurtosis = data.get_stats()\n\n        ## Save statistical quantities to file\n        file = open (os.path.splitext(filename)[0] + \"_c\"+ str(polynom) + \"_\" + \"stats\" + \".txt\", \"w\")\n        file.write(\"avg \"+str(avg) +\"\\nra \"+str(ra)+\"\\nrms \"+str(rms)+\"\\nskew \" +str(skew)+\"\\nkurtosis \"+ str(kurtosis))\n        file.close()\n\n    print \"File saved.\\n\"\t\n\n\n\n\n",
			"file": "pygwy.py",
			"file_size": 93,
			"file_write_time": 132274004338303609,
			"settings":
			{
				"buffer_size": 2906,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/romer/OneDrive/Escritorio/Python/Software_Carpentry/data-shell/molecules/middle.hs",
			"settings":
			{
				"buffer_size": 72,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/romer/OneDrive/Escritorio/Python/Software_Carpentry/data-shell/molecules/middle.hs",
		"/C/Users/romer/OneDrive/Escritorio/Python/Software_Carpentry/draft.txt",
		"/C/Users/romer/PycharmProjects/RT_plots/wear_profile.py",
		"/C/Users/romer/PycharmProjects/RT_plots/wear_depth_plot.py",
		"/C/Users/romer/PycharmProjects/RT_plots/pygwy",
		"/C/Users/romer/OneDrive/Escritorio/ME 263/lorentz_attractor.py",
		"/C/Users/romer/OneDrive/Escritorio/JPL_data_analysis/Data_analysis_code/jpl_data_analysis.py",
		"/C/Users/romer/Box/Sergio/inline_test/UD_HS_AM_RT_17mm/UD_HS_AM_RT_17mm/images/50rev/UD_HS_AM_RT_17mm_50rev",
		"/C/Users/romer/OneDrive/Escritorio/planets/mylog.log",
		"/C/Users/romer/OneDrive/Escritorio/planets/.gitignore",
		"/C/Users/romer/OneDrive/Escritorio/planets/mars.txt",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/molecules/middle.sh",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/molecules/sorted-lengths.txt",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/molecules/octane.pdb",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/molecules/lengths.txt",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/molecules/new_file.txt",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/thesis/final.txt",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/thesis/draft2.txt",
		"/C/Users/romer/OneDrive/Escritorio/Software_Carpentry/data-shell/thesis/draft.txt",
		"/C/Users/romer/.bash_profile",
		"/C/Users/romer/OneDrive/Escritorio/myexample",
		"/C/Users/romer/OneDrive/Escritorio/Martini Lab/Oxygen Sensor Script/sdi_12_reading_v1_0.py"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pygwy.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2906,
						"regions":
						{
						},
						"selection":
						[
							[
								1840,
								1840
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/romer/OneDrive/Escritorio/Python/Software_Carpentry/data-shell/molecules/middle.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72,
						"regions":
						{
						},
						"selection":
						[
							[
								72,
								72
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "wear_depth_plot.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
